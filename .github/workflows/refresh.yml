name: Refresh Server Data

on:
  schedule:
    - cron: '0 */12 * * *'   # every hour
  workflow_dispatch:        # allow manual trigger

jobs:
  scan:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
      SUPABASE_BUCKET_NAME: ${{ secrets.SUPABASE_BUCKET_NAME }}
      SUPABASE_FILE_PATH: ${{ secrets.SUPABASE_FILE_PATH }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r backend/requirements.txt || true

      - name: Download all FOFA_* files from Supabase
        run: |
          python <<EOF
          import os
          from supabase import create_client
          import pathlib
          import sys

          try:
              url = os.environ["SUPABASE_URL"]
              key = os.environ["SUPABASE_SECRET_KEY"]
              bucket = os.environ["SUPABASE_BUCKET_NAME"]

              supabase = create_client(url, key)
              # List all files in the bucket
              files = supabase.storage.from_(bucket).list()
              fofa_files = [f['name'] for f in files if f['name'].startswith('FOFA_') and f['name'].endswith('.json')]

              target_dir = pathlib.Path("backend/input")
              target_dir.mkdir(parents=True, exist_ok=True)

              for fname in fofa_files:
                  data = supabase.storage.from_(bucket).download(fname)
                  target = target_dir / fname
                  target.write_bytes(data)
                  print(f"✅ Downloaded {fname} to {target}")

          except Exception as e:
              print(f"❌ Failed to fetch FOFA_* files from Supabase:", e, file=sys.stderr)
              sys.exit(1)
          EOF

      - name: Run scanner
        run: |
          python backend/live_server_identifier.py

      - name: Commit and push updated data
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add frontend/public/data/live_servers.json
          git commit -m "chore: auto-refresh scan [skip ci]" || echo "No changes"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}
        
          
