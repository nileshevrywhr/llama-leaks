name: Refresh Server Data

on:
  schedule:
    - cron: '0 */1 * * *'   # every hour
  workflow_dispatch:        # allow manual trigger

jobs:
  scan:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
      SUPABASE_BUCKET_NAME: ${{ secrets.SUPABASE_BUCKET_NAME }}
      SUPABASE_FILE_PATH: ${{ secrets.SUPABASE_FILE_PATH }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r backend/requirements.txt || true

      - name: Download raw input from Supabase
        run: |
          python <<EOF
    import os
    from supabase import create_client
    import pathlib
    import sys

    try:
        url = os.environ["SUPABASE_URL"]
        key = os.environ["SUPABASE_SECRET_KEY"]
        bucket = os.environ["SUPABASE_BUCKET_NAME"]
        path = os.environ["SUPABASE_FILE_PATH"]

        supabase = create_client(url, key)
        data = supabase.storage.from_(bucket).download(path)

        target = pathlib.Path(f"backend/input/{sys.argv[1]}.json")
        target.parent.mkdir(parents=True, exist_ok=True)
        target.write_bytes(data)

        print("✅ File fetched and saved to backend/input/fofa_10.json")
    
    except Exception as e:
        print(f"❌ Failed to fetch file from Supabase:", e, file=sys.stderr)
        sys.exit(1)
    EOF

      - name: Run scanner
        run: python backend/live_server_identifier.py

      - name: Commit changes
        run: |
          git config user.name "statusisgreen"
          git config user.email "statusisgreen@bananalabs.dev"
          git add frontend/public/data/live_servers.json
          git commit -m "chore: auto-refresh scan [skip ci]" || echo "error refreshing servers"
          git push
